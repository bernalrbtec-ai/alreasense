🔐 ROTAÇÃO RÁPIDA DE CREDENCIAIS (COPY-PASTE)
===============================================

⚠️  EXECUTAR NA ORDEM EXATA!

═══════════════════════════════════════════════════════════════
1. GERAR NOVAS CREDENCIAIS
═══════════════════════════════════════════════════════════════

# Django SECRET_KEY
python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'

# Anote o resultado aqui:
NOVA_SECRET_KEY=_______________________________________

# RabbitMQ Password
python -c 'import secrets; print(secrets.token_urlsafe(32))'

# Anote o resultado aqui:
NOVA_RABBITMQ_PASSWORD=_______________________________________

═══════════════════════════════════════════════════════════════
2. ATUALIZAR RAILWAY (BACKEND)
═══════════════════════════════════════════════════════════════

# Login Railway
railway login
railway link

# Set Evolution API Key (gere nova no painel Evolution primeiro!)
railway variables set EVOLUTION_API_KEY="COLE_AQUI_A_NOVA_CHAVE_DO_EVOLUTION"

# Set Django SECRET_KEY
railway variables set SECRET_KEY="COLE_AQUI_A_NOVA_SECRET_KEY"

# Set RabbitMQ (mantenha formato, apenas mude password)
railway variables set RABBITMQ_PRIVATE_URL="amqp://USER:COLE_AQUI_NOVA_PASSWORD@rabbitmq.railway.internal:5672"

# Set S3 Keys (gere novas no MinIO primeiro!)
railway variables set S3_ACCESS_KEY="COLE_AQUI_NOVA_S3_ACCESS_KEY"
railway variables set S3_SECRET_KEY="COLE_AQUI_NOVA_S3_SECRET_KEY"

# Verificar
railway variables

═══════════════════════════════════════════════════════════════
3. RESTART BACKEND
═══════════════════════════════════════════════════════════════

# Restart via CLI
railway up --detach

# OU no dashboard:
# Services → Backend → Settings → Restart

═══════════════════════════════════════════════════════════════
4. VALIDAR
═══════════════════════════════════════════════════════════════

# Health check
curl https://alreasense-backend-production.up.railway.app/api/health/

# Teste login no frontend
# Teste Evolution API no frontend (Configurações → Servidor)
# Teste envio de mensagem no chat

═══════════════════════════════════════════════════════════════
5. INVALIDAR CREDENCIAIS ANTIGAS
═══════════════════════════════════════════════════════════════

# Evolution API:
# - Acesse painel Evolution
# - Settings → API Keys → Revoke antiga (584B4A4A-0815...)

# S3/MinIO:
# - Acesse MinIO Console
# - Access Keys → Delete antiga (u2gh8ao...)

═══════════════════════════════════════════════════════════════
6. APLICAR CORREÇÕES DE CÓDIGO
═══════════════════════════════════════════════════════════════

# No seu terminal local:
cd /caminho/para/Sense

# Execute script de correção
python CORRECAO_SEGURANCA_URGENTE.py --execute

# Commit as mudanças
git add .
git commit -m "fix(security): Remove hardcoded credentials and apply security fixes"
git push origin main

═══════════════════════════════════════════════════════════════
7. INSTALAR PRE-COMMIT HOOKS
═══════════════════════════════════════════════════════════════

# Instalar pre-commit
pip install pre-commit

# Instalar hooks
pre-commit install

# Testar
pre-commit run --all-files

═══════════════════════════════════════════════════════════════
✅ CHECKLIST FINAL
═══════════════════════════════════════════════════════════════

[ ] Evolution API Key rotacionada
[ ] S3 credentials rotacionadas
[ ] SECRET_KEY rotacionada
[ ] RabbitMQ password rotacionada
[ ] Railway variables atualizadas
[ ] Backend reiniciado
[ ] Sistema validado (health check OK)
[ ] Login funciona
[ ] Evolution API funciona
[ ] Chat funciona
[ ] Credenciais antigas invalidadas
[ ] Código corrigido
[ ] Pre-commit hooks instalados
[ ] Mudanças commitadas e pushed

═══════════════════════════════════════════════════════════════
📞 SE ALGO DER ERRADO
═══════════════════════════════════════════════════════════════

1. NÃO ENTRE EM PÂNICO
2. Verifique logs: railway logs --tail 100
3. Reverta se necessário: railway rollback
4. Consulte: ANALISE_SEGURANCA_COMPLETA.md

═══════════════════════════════════════════════════════════════

Tempo total estimado: 30-45 minutos

