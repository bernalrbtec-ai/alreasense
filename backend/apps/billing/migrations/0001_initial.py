# Generated by Django 4.2.25 on 2025-10-10 11:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BillingHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("plan_change", "Mudan√ßa de Plano"),
                            ("addon_add", "Add-on Adicionado"),
                            ("addon_remove", "Add-on Removido"),
                            ("price_change", "Mudan√ßa de Pre√ßo"),
                            ("product_activate", "Produto Ativado"),
                            ("product_deactivate", "Produto Desativado"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Descri√ß√£o da a√ß√£o"),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Valor da a√ß√£o",
                        max_digits=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Hist√≥rico de Billing",
                "verbose_name_plural": "Hist√≥rico de Billing",
                "db_table": "billing_history",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Identificador √∫nico do plano", unique=True
                    ),
                ),
                ("name", models.CharField(help_text="Nome do plano", max_length=100)),
                ("description", models.TextField(help_text="Descri√ß√£o do plano")),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Pre√ßo mensal (R$)",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Plano ativo para venda"
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#3B82F6", help_text="Cor hex do plano", max_length=7
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0, help_text="Ordem de exibi√ß√£o"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Plano",
                "verbose_name_plural": "Planos",
                "db_table": "billing_plan",
                "ordering": ["sort_order", "price"],
            },
        ),
        migrations.CreateModel(
            name="PlanProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_included",
                    models.BooleanField(
                        default=True, help_text="Produto inclu√≠do no plano"
                    ),
                ),
                (
                    "limit_value",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Limite do produto (ex: 5000 an√°lises/m√™s)",
                        null=True,
                    ),
                ),
                (
                    "limit_unit",
                    models.CharField(
                        blank=True,
                        help_text="Unidade do limite (ex: 'an√°lises/m√™s', 'campanhas/m√™s')",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "is_addon_available",
                    models.BooleanField(
                        default=True,
                        help_text="Permite adicionar este produto como add-on",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Produto do Plano",
                "verbose_name_plural": "Produtos dos Planos",
                "db_table": "billing_plan_product",
                "ordering": ["plan__sort_order", "product__name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Identificador √∫nico do produto", unique=True
                    ),
                ),
                ("name", models.CharField(help_text="Nome do produto", max_length=100)),
                (
                    "description",
                    models.TextField(help_text="Descri√ß√£o detalhada do produto"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Produto ativo na plataforma"
                    ),
                ),
                (
                    "requires_ui_access",
                    models.BooleanField(
                        default=True,
                        help_text="Produto requer acesso √† UI (ex: API Only = False)",
                    ),
                ),
                (
                    "addon_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Pre√ßo como add-on (R$/m√™s)",
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        default="üì¶", help_text="Emoji/√≠cone do produto", max_length=50
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#3B82F6", help_text="Cor hex do produto", max_length=7
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Produto",
                "verbose_name_plural": "Produtos",
                "db_table": "billing_product",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TenantProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_addon",
                    models.BooleanField(
                        default=False, help_text="Produto contratado como add-on"
                    ),
                ),
                (
                    "addon_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Pre√ßo pago como add-on (R$/m√™s)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True,
                        help_text="API Key espec√≠fica do produto (se aplic√°vel)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Produto ativo para o tenant"
                    ),
                ),
                (
                    "activated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Data de ativa√ß√£o"
                    ),
                ),
                (
                    "deactivated_at",
                    models.DateTimeField(
                        blank=True, help_text="Data de desativa√ß√£o", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenant_products",
                        to="billing.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Produto do Tenant",
                "verbose_name_plural": "Produtos dos Tenants",
                "db_table": "billing_tenant_product",
                "ordering": ["-is_addon", "product__name"],
            },
        ),
    ]
