# Generated by Django 4.2.25 on 2025-10-11 13:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("tenancy", "0001_initial"),
        ("contacts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("notifications", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Nome da Campanha"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                (
                    "rotation_mode",
                    models.CharField(
                        choices=[
                            ("round_robin", "Round Robin"),
                            ("balanced", "Balanceado"),
                            ("intelligent", "Inteligente"),
                        ],
                        default="intelligent",
                        max_length=20,
                        verbose_name="Modo de Rotação",
                    ),
                ),
                (
                    "interval_min",
                    models.IntegerField(
                        default=3, verbose_name="Intervalo Mínimo (seg)"
                    ),
                ),
                (
                    "interval_max",
                    models.IntegerField(
                        default=8, verbose_name="Intervalo Máximo (seg)"
                    ),
                ),
                (
                    "daily_limit_per_instance",
                    models.IntegerField(
                        default=100, verbose_name="Limite Diário por Instância"
                    ),
                ),
                (
                    "pause_on_health_below",
                    models.IntegerField(
                        default=50, verbose_name="Pausar se Health Score abaixo de"
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Agendada Para"
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Iniciada Em"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Concluída Em"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Rascunho"),
                            ("scheduled", "Agendada"),
                            ("running", "Em Execução"),
                            ("paused", "Pausada"),
                            ("completed", "Concluída"),
                            ("cancelled", "Cancelada"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "total_contacts",
                    models.IntegerField(default=0, verbose_name="Total de Contatos"),
                ),
                (
                    "messages_sent",
                    models.IntegerField(default=0, verbose_name="Mensagens Enviadas"),
                ),
                (
                    "messages_delivered",
                    models.IntegerField(default=0, verbose_name="Mensagens Entregues"),
                ),
                (
                    "messages_read",
                    models.IntegerField(default=0, verbose_name="Mensagens Lidas"),
                ),
                (
                    "messages_failed",
                    models.IntegerField(default=0, verbose_name="Mensagens com Erro"),
                ),
                (
                    "current_instance_index",
                    models.IntegerField(
                        default=0, verbose_name="Índice da Instância Atual"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado Em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado Em"),
                ),
                (
                    "contact_list",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="campaigns",
                        to="contacts.contactlist",
                        verbose_name="Lista de Contatos",
                    ),
                ),
            ],
            options={
                "verbose_name": "Campanha",
                "verbose_name_plural": "Campanhas",
                "db_table": "campaigns_campaign",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CampaignMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("content", models.TextField(verbose_name="Conteúdo da Mensagem")),
                ("order", models.IntegerField(default=0, verbose_name="Ordem")),
                (
                    "times_used",
                    models.IntegerField(default=0, verbose_name="Vezes Utilizada"),
                ),
                (
                    "media_url",
                    models.URLField(blank=True, null=True, verbose_name="URL da Mídia"),
                ),
                (
                    "media_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("image", "Imagem"),
                            ("video", "Vídeo"),
                            ("audio", "Áudio"),
                            ("document", "Documento"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Tipo de Mídia",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="campaigns.campaign",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mensagem da Campanha",
                "verbose_name_plural": "Mensagens da Campanha",
                "db_table": "campaigns_message",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="CampaignContact",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendente"),
                            ("sending", "Enviando"),
                            ("sent", "Enviada"),
                            ("delivered", "Entregue"),
                            ("read", "Lida"),
                            ("failed", "Falhou"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Agendado Para"
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Enviado Em"
                    ),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Entregue Em"
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Lido Em"),
                ),
                (
                    "failed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Falhou Em"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, null=True, verbose_name="Mensagem de Erro"
                    ),
                ),
                (
                    "whatsapp_message_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "retry_count",
                    models.IntegerField(default=0, verbose_name="Tentativas"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="campaign_contacts",
                        to="campaigns.campaign",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="campaign_contacts",
                        to="contacts.contact",
                    ),
                ),
                (
                    "instance_used",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="campaign_messages_sent",
                        to="notifications.whatsappinstance",
                    ),
                ),
                (
                    "message_used",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contacts_sent",
                        to="campaigns.campaignmessage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contato da Campanha",
                "verbose_name_plural": "Contatos da Campanha",
                "db_table": "campaigns_contact",
                "ordering": ["created_at"],
                "unique_together": {("campaign", "contact")},
            },
        ),
        migrations.AddField(
            model_name="campaign",
            name="contacts",
            field=models.ManyToManyField(
                related_name="campaigns",
                through="campaigns.CampaignContact",
                to="contacts.contact",
                verbose_name="Contatos",
            ),
        ),
        migrations.AddField(
            model_name="campaign",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_campaigns",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Criado Por",
            ),
        ),
        migrations.AddField(
            model_name="campaign",
            name="instances",
            field=models.ManyToManyField(
                related_name="campaigns",
                to="notifications.whatsappinstance",
                verbose_name="Instâncias",
            ),
        ),
        migrations.AddField(
            model_name="campaign",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="campaigns",
                to="tenancy.tenant",
            ),
        ),
        migrations.CreateModel(
            name="CampaignLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "log_type",
                    models.CharField(
                        choices=[
                            ("created", "Campanha Criada"),
                            ("started", "Campanha Iniciada"),
                            ("paused", "Campanha Pausada"),
                            ("resumed", "Campanha Retomada"),
                            ("completed", "Campanha Concluída"),
                            ("cancelled", "Campanha Cancelada"),
                            ("instance_selected", "Instância Selecionada"),
                            ("instance_paused", "Instância Pausada"),
                            ("instance_resumed", "Instância Retomada"),
                            ("message_sent", "Mensagem Enviada"),
                            ("message_delivered", "Mensagem Entregue"),
                            ("message_read", "Mensagem Lida"),
                            ("message_failed", "Mensagem Falhou"),
                            ("rotation_changed", "Modo de Rotação Alterado"),
                            ("contact_added", "Contato Adicionado"),
                            ("contact_removed", "Contato Removido"),
                            ("limit_reached", "Limite Atingido"),
                            ("health_issue", "Problema de Saúde"),
                            ("error", "Erro"),
                        ],
                        db_index=True,
                        max_length=30,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Informação"),
                            ("warning", "Aviso"),
                            ("error", "Erro"),
                            ("critical", "Crítico"),
                        ],
                        db_index=True,
                        default="info",
                        max_length=10,
                    ),
                ),
                ("message", models.TextField(verbose_name="Mensagem do Log")),
                (
                    "details",
                    models.JSONField(
                        blank=True,
                        help_text="Dados estruturados: instance_id, contact_id, error_code, etc.",
                        null=True,
                        verbose_name="Detalhes (JSON)",
                    ),
                ),
                (
                    "duration_ms",
                    models.IntegerField(
                        blank=True,
                        help_text="Tempo de execução da operação",
                        null=True,
                        verbose_name="Duração (ms)",
                    ),
                ),
                (
                    "request_data",
                    models.JSONField(
                        blank=True,
                        help_text="Payload enviado para API",
                        null=True,
                        verbose_name="Dados da Requisição",
                    ),
                ),
                (
                    "response_data",
                    models.JSONField(
                        blank=True,
                        help_text="Resposta recebida da API",
                        null=True,
                        verbose_name="Dados da Resposta",
                    ),
                ),
                (
                    "http_status",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Status HTTP"
                    ),
                ),
                (
                    "campaign_progress",
                    models.FloatField(
                        blank=True,
                        help_text="Snapshot do progresso quando log foi criado",
                        null=True,
                        verbose_name="Progresso da Campanha (%)",
                    ),
                ),
                (
                    "instance_health_score",
                    models.IntegerField(
                        blank=True,
                        help_text="Snapshot do health quando log foi criado",
                        null=True,
                        verbose_name="Health Score da Instância",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="campaigns.campaign",
                    ),
                ),
                (
                    "campaign_contact",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="logs",
                        to="campaigns.campaigncontact",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="campaign_logs",
                        to="contacts.contact",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="campaign_logs_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "instance",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="campaign_logs",
                        to="notifications.whatsappinstance",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log da Campanha",
                "verbose_name_plural": "Logs das Campanhas",
                "db_table": "campaigns_log",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["campaign", "-created_at"],
                        name="campaigns_l_campaig_419129_idx",
                    ),
                    models.Index(
                        fields=["log_type", "-created_at"],
                        name="campaigns_l_log_typ_050ece_idx",
                    ),
                    models.Index(
                        fields=["severity", "-created_at"],
                        name="campaigns_l_severit_4464eb_idx",
                    ),
                    models.Index(
                        fields=["instance", "-created_at"],
                        name="campaigns_l_instanc_22338e_idx",
                    ),
                ],
            },
        ),
    ]
