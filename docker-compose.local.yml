version: "3.9"

services:
  # PostgreSQL com pgvector
  db:
    image: pgvector/pgvector:pg16
    container_name: alrea_sense_db_local
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: alrea_sense_local
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - alrea_sense_network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: alrea_sense_redis_local
    ports:
      - "6379:6379"
    volumes:
      - redis_data_local:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - alrea_sense_network

  # Backend Django
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.local
    container_name: alrea_sense_backend_local
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_static:/app/staticfiles
    environment:
      - SECRET_KEY=local-dev-secret-key-change-in-production
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/alrea_sense_local
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_TASK_ALWAYS_EAGER=False
      - CHANNELS_REDIS_URL=redis://redis:6379/1
      - CORS_ALLOWED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173,http://localhost:3000
      - CSRF_TRUSTED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173,http://localhost:3000
      - BASE_URL=http://localhost:8000
    command: >
      sh -c "
        echo 'ðŸ”§ Aguardando banco de dados...' &&
        python manage.py migrate &&
        echo 'ðŸ‘¤ Criando superusuÃ¡rio...' &&
        python create_superuser.py &&
        echo 'ðŸ“¦ Coletando arquivos estÃ¡ticos...' &&
        python manage.py collectstatic --noinput &&
        echo 'ðŸš€ Iniciando servidor Django...' &&
        python manage.py runserver 0.0.0.0:8000
      "
    networks:
      - alrea_sense_network
    stdin_open: true
    tty: true

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.local
    container_name: alrea_sense_celery_local
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    volumes:
      - ./backend:/app
    environment:
      - SECRET_KEY=local-dev-secret-key-change-in-production
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/alrea_sense_local
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A alrea_sense worker -l info
    networks:
      - alrea_sense_network
    restart: unless-stopped

  # Celery Beat (Tarefas agendadas)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.local
    container_name: alrea_sense_celery_beat_local
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    volumes:
      - ./backend:/app
    environment:
      - SECRET_KEY=local-dev-secret-key-change-in-production
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/alrea_sense_local
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A alrea_sense beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    networks:
      - alrea_sense_network
    restart: unless-stopped

  # Frontend React + Vite
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.local
    container_name: alrea_sense_frontend_local
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_WS_BASE_URL=ws://localhost:8000
    command: npm run dev -- --host 0.0.0.0 --port 5173
    networks:
      - alrea_sense_network
    stdin_open: true
    tty: true

volumes:
  postgres_data_local:
  redis_data_local:
  backend_static:

networks:
  alrea_sense_network:
    driver: bridge

